# Purpose: Task is to perform the static code security scan
# Required parameters:
# staticCodeSecurityScanProjectName (String) (Required)  What you want to call (or already have called) this project in Static code security scan
# securityScanTargetName
# failOnIssues (Boolean) (Optional) Fail the build when issue is reported against Static code security scan. Deault: true
# targetFile (String) (Optional) Custom path to manifest file to test.
# codeScan (String) (Optional) Flag to perform Code Scan

# NOTE: severity-threshold for all scans have been currently set to high. Possible values for this are: --severity-threshold=<low|medium|high|critical>
# NOTE: All monitor steps have been commented out temporarily

parameters:
- name: staticCodeSecurityScanProjectName
  displayName: What you want to call (or already have called) this project in Static code security scan
  type: string

- name: securityScanTargetName
  displayName: What you want to call (or already call) this Target in Static code security scan
  type: string

  ## Right now, we have temporarily set failOnIssues to "false" after discussion with Amado and Stephen on 2nd May 2023 to not fail build after Security scanning tool report the issue.
  ## TODO: PLT-28678 : We need to set the failOnIssues to "true" once App Dev + Security team are on the same page to when any Security issues to be exempted
  ## In future Security team needs to work with DevOps team and Snyk team manage that from Control Plane of Snyk instead of from this Template.
- name: failOnIssues
  displayName: Fail the build after issue reported by Static code security scan
  type: boolean
  default: false

- name: targetFile
  displayName: Custom path to manifest file to test.
  type: string
  default: ''

- name: codeScan
  displayName: Flag to perform Code Scan
  type: boolean
  default: true

- name: jsonFileOutputFile
  type: string
  default: $(Build.ArtifactStagingDirectory)/report-$(Build.BuildId).json

steps:

- bash: |
    curl --compressed https://static.snyk.io/cli/v1.1215.0/snyk-linux -o snyk
    npm install -g snyk snyk-to-html
    chmod +x ./snyk
    mv ./snyk /usr/local/bin/
    snyk auth $(SNYK_TOKEN)
    snyk config set org=$(snyk_org_ID)
  displayName: Install_Snyk
  enabled: false

- bash: |
    snyk test --fail-on=all --file=${{parameters.targetFile}}  --json-file-output=${{parameters.jsonFileOutputFile}} --project-name=${{parameters.staticCodeSecurityScanProjectName}}

    #snyk monitor --remote-repo-url=${{parameters.securityScanTargetName}} --project-name=${{parameters.staticCodeSecurityScanProjectName}}

    RESULT=$?
      snyk-to-html -o $(Build.ArtifactStagingDirectory)/results-open-source.html < $(Build.ArtifactStagingDirectory)/report-$(Build.BuildId).json
      exit $RESULT

  continueOnError: true
  displayName: Snyk_Scanning_Fail_On
  condition: eq(${{parameters.failOnIssues}}, True)
  enabled: false


- bash: |
    snyk test --severity-threshold=high --file=${{parameters.targetFile}} --json-file-output=${{parameters.jsonFileOutputFile}} --project-name=${{parameters.staticCodeSecurityScanProjectName}}
    
    #snyk monitor --remote-repo-url=${{parameters.securityScanTargetName}} --project-name=${{parameters.staticCodeSecurityScanProjectName}}
    
    RESULT=$?
      snyk-to-html -o $(Build.ArtifactStagingDirectory)/results-open-source.html < $(Build.ArtifactStagingDirectory)/report-$(Build.BuildId).json
      exit $RESULT
      
  continueOnError: true
  condition: eq(${{parameters.failOnIssues}}, False)
  displayName: Snyk_Scanning
  enabled: false


- task: JakubRumpca.azure-pipelines-html-report.PublishHtmlReport.PublishHtmlReport@1
  name: PublishSnykScan
  condition: succeededOrFailed()
  enabled: false
  inputs:
    reportDir: $(Build.ArtifactStagingDirectory)/results-open-source.html
    tabName: 'Snyk Open Source'


- bash: |
    snyk code test --severity-threshold=high --json-file-output=${{parameters.jsonFileOutputFile}} ${{parameters.targetFile}} || true
    
    # snyk code test --report --project-name=${{parameters.staticCodeSecurityScanProjectName}}
    
    RESULT=$?
      snyk-to-html -o $(Build.ArtifactStagingDirectory)/results-code.html < $(Build.ArtifactStagingDirectory)/report-$(Build.BuildId).json
      exit $RESULT
      
  continueOnError: true
  condition: eq(${{parameters.codeScan}}, True)
  displayName: Snyk_Scanning
  enabled: false

  
- task: JakubRumpca.azure-pipelines-html-report.PublishHtmlReport.PublishHtmlReport@1
  name: PublishSnykCodeScan
  condition: succeededOrFailed()
  enabled: false
  inputs:
    reportDir: $(Build.ArtifactStagingDirectory)/results-code.html
    tabName: 'Snyk code'